import { Component, Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';

interface Meme {
  name: string;
  link: string;
}

interface CaptionItem {
  text: string,
  x: number,
  y: number
}

interface Caption {
  top: CaptionItem,
  bottom: CaptionItem
}

/**
 * represents a meme with added caption. Can be useful to save memes into the history.
 */
export interface CustomizedMeme {
  baseMeme: Meme;    // the base meme object
  caption: Caption;  // the caption object (see
  link: URL;         // the built url, which is generated by the memeUrl getter when the above baseMeme and caption would be given
}

const MEME_API_BASE_URL = 'http://flobe-online.de:3002';

@Component({
  selector: 'mmn-mememuc',
  templateUrl: './mememuc.component.html',
  styleUrls: [ './mememuc.component.css' ],
})
export class MemeMUCComponent {

  public memeOptions: Meme[] = [
    {
      name: 'doge',
      link: `${MEME_API_BASE_URL}/memes/doge`,
    },
    {
      name: 'raptor',
      link: `${MEME_API_BASE_URL}/memes/raptor`
    },
    {
      name: 'boromir',
      link: `${MEME_API_BASE_URL}/memes/boromir`
    }
  ];

  // TODO this should store all saved memes
  public savedMemes: CustomizedMeme[] = [];

  public selectedBaseImage: Meme = null;

  public caption: Caption = {
    top: {
      text: '',
      x: 0,
      y: 0,
    },
    bottom: {
      text: '',
      x: 0,
      y: 0,
    },
  };


  public selectBaseImage (meme: Meme) {
    this.selectedBaseImage = meme;
  }

  public get memeUrl (): URL {
    if (this.selectedBaseImage) {
      const url = new URL(this.selectedBaseImage.link);

      url.searchParams.append('text', this.caption.top.text);
      url.searchParams.append('x', this.caption.top.x.toString());
      url.searchParams.append('y', this.caption.top.y.toString());
      url.searchParams.append('text2', this.caption.bottom.text);
      url.searchParams.append('x2', this.caption.bottom.x.toString());
      url.searchParams.append('y2', this.caption.bottom.y.toString());

      return url;
    } else {
      return null;
    }
  }

}
